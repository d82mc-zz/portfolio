{"version":3,"sources":["js/main.js","serviceWorker.js","index.js"],"names":["view","main","currentId","currentTab","tabContainerHeight","self","$","click","event","onTabClick","this","window","scroll","onScroll","resize","onResize","rel","href","className","id","onClick","setSliderCss","class","hideSlider","element","preventDefault","scrollTop","attr","offset","top","animate","checkTabContainerPosition","findCurrentTabSelector","location","height","addClass","removeClass","newCurrentId","newCurrentTab","each","offsetTop","offsetBottom","width","left","css","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4bf03cb3.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport $ from 'jquery';\nimport './main.scss';\n\nvar view;\n\nexport class main extends Component {\n    render() {\n        return (\n        <React-fragment>\n\t\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n            <section className=\"nav-bar-tabs\" id=\"home\">\n              <h1>Dakota McCombs</h1>\n              <h2>-Purpose Driven Web Developer-</h2>\n              <div className=\"nav-bar-tabs-container\">\n                <span className=\"nav-bar-tab-slider\"></span>\n                <a onClick={()=>this.setSliderCss()} className=\"nav-bar-tab\" href=\"#tab-Contact\">Contact</a>\n                <a onClick={()=>this.setSliderCss()} className=\"nav-bar-tab\" href=\"#tab-Resume\">Resume</a>\n                <a onClick={()=>this.setSliderCss()} className=\"nav-bar-tab\" href=\"#tab-Projects\">Projects</a>\n                <a onClick={()=>this.setSliderCss()} className=\"nav-bar-tab\" href=\"#tab-Music\">Music</a>\n                <a onClick={()=>this.setSliderCss()} className=\"nav-bar-tab\" href=\"#tab-Other\">Other</a>\n              </div>\n            </section>\n            <main className=\"nav-main\">\n              <section className=\"nav-slide\" id=\"tab-Contact\">\n                <h1>Contact</h1>\n                <h2>something about contact</h2>\n\t\t\t\t<c class=\"link-container\">\n\t\t\t\t<b href=\"#\" class=\"fa fa-facebook\"></b>\n\t\t\t\t<b href=\"#\" class=\"fa fa-linkedin\"></b>\n\t\t\t\t<b href=\"#\" class=\"fa fa-google\"></b>\n\t\t\t\t<b href=\"#\" class=\"fa fa-github\"></b>\n\t\t\t\t</c><br></br>\n                <a onClick={()=>this.hideSlider()} className=\"home_link\" href=\"#home\">Home</a>\n              </section>\n              <section className=\"nav-slide\" id=\"tab-Resume\">\n                <h1>Resume</h1>\n                <h2>I've already worked a lot in my young life. Feel free to reach out with job inquiries!</h2>\n                <a href=\"https://drive.google.com/uc?authuser=0&id=19SeVV3DgLVxhzuPIYnUJD4MZPm9pZJEo&export=download\" class=\"resumelink\">Download my resume!</a><br></br>\n                <a onClick={()=>this.hideSlider()} className=\"home_link\" href=\"#home\">Home</a>\n              </section>\n              <section className=\"nav-slide\" id=\"tab-Projects\">\n                <h1>Projects</h1>\n                <h2>something about projects</h2>\n                <a onClick={()=>this.hideSlider()} className=\"home_link\" href=\"#home\">Home</a>\n              </section>\n              <section className=\"nav-slide\" id=\"tab-Music\">\n                <h1>Music</h1>\n                <h2>something about music</h2>\n\t\t\t\t<c class=\"mlink-container\">\n\t\t\t\t<b href=\"#\" class=\"fa fa-youtube\"></b>\n\t\t\t\t<b href=\"#\" class=\"fa fa-soundcloud\"></b>\n\t\t\t\t</c><br></br>\n                <a onClick={()=>this.hideSlider()} className=\"home_link\" href=\"#home\">Home</a>\n              </section>\n              <section className=\"nav-slide\" id=\"tab-Other\">\n                <h1>Other</h1>\n                <h2>something about other</h2>\n                <a onClick={()=>this.hideSlider()} className=\"home_link\" href=\"#home\">Home</a>\n              </section>\n            </main>\n            </React-fragment>\n        )\n\t}\n\n    constructor() {\n        super();\n\t\tthis.currentId = null;\n\t\tthis.currentTab = null;\n\t\tthis.tabContainerHeight = 70;\n\t\tlet self = this;\n\t\t$('.nav-bar-tab').click(function(event) { \n\t\t\tself.onTabClick(event, $(this)); \n\t\t});\n\t\t$(window).scroll(() => { this.onScroll(); });\n\t\t$(window).resize(() => { this.onResize(); });\n\t}\n\n\tonTabClick(event, element) {\n\t\tevent.preventDefault();\n\t\tlet scrollTop = $(element.attr('href')).offset().top - this.tabContainerHeight + 1;\n\t\t$('html, body').animate({ scrollTop: scrollTop}, 600);\n\t}\n\t\n\tonScroll() {\n\t\tthis.checkTabContainerPosition();\n    \tthis.findCurrentTabSelector();\n\t}\n\t\n\tonResize() {\n\t\tif(this.currentId) {\n\t\t\twindow.location.href = view;\n\t\t\tthis.setSliderCss();\n\t\t}\n\t}\n\t\n\tcheckTabContainerPosition() {\n\t\tlet offset = $('.nav-bar-tabs').offset().top + $('.nav-bar-tabs').height() - this.tabContainerHeight;\n\t\tif($(window).scrollTop() > offset) {\n\t\t\t$('.nav-bar-tabs-container').addClass('nav-bar-tabs-container--top');\n\t\t} \n\t\telse {\n\t\t\t$('.nav-bar-tabs-container').removeClass('nav-bar-tabs-container--top');\n\t\t}\n\t}\n\t\n\tfindCurrentTabSelector(element) {\n\t\tview = this.currentId;\n\t\tlet newCurrentId = this.currentId;\n\t\tlet newCurrentTab = this.currentTab;\n\t\tlet self = this;\n\t\t$('.nav-bar-tab').each(function() {\n\t\t\tlet id = $(this).attr('href');\n\t\t\tlet offsetTop = $(id).offset().top - self.tabContainerHeight;\n\t\t\tlet offsetBottom = $(id).offset().top + $(id).height() - self.tabContainerHeight;\n\t\t\tif($(window).scrollTop() > offsetTop && $(window).scrollTop() < offsetBottom) {\n\t\t\t\tnewCurrentId = id;\n\t\t\t\tnewCurrentTab = $(this);\n\t\t\t}\n\t\t});\n\t\tif(this.currentId !== newCurrentId || this.currentId === null) {\n\t\t\tthis.currentId = newCurrentId;\n\t\t\tthis.currentTab = newCurrentTab;\n\t\t\tthis.setSliderCss();\n\t\t}\n\t}\n\t\n\tsetSliderCss() {\n\t\tlet width = 0;\n\t\tlet left = 0;\n\t\tif(this.currentTab) {\n\t\t\twidth = this.currentTab.css('width');\n\t\t\tleft = this.currentTab.offset().left;\n\t\t}\n\t\t$('.nav-bar-tab-slider').css('width', width);\n\t\t$('.nav-bar-tab-slider').css('left', left);\n\t}\n\t\n\thideSlider() {\n\t\t$('.nav-bar-tab-slider').css('width', 0)\n\t}\n    \n}\n\nexport default main\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './js/main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}